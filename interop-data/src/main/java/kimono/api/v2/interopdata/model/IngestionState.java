/*
 * Interop Data API
 * Interop Data APIs provide access to the data objects and events from Interop Cloud repositories and Integration repositories
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package kimono.api.v2.interopdata.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets IngestionState
 */
@JsonAdapter(IngestionState.Adapter.class)
public enum IngestionState {
  
  UNSPECIFIED("unspecified"),
  
  PREPARING("preparing"),
  
  SCHEDULED("scheduled"),
  
  EXECUTING("executing"),
  
  SUCCESS("success"),
  
  FAILED("failed"),
  
  CANCELLED("cancelled"),
  
  TIMEOUT("timeout");

  private String value;

  IngestionState(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static IngestionState fromValue(String text) {
    for (IngestionState b : IngestionState.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + text + "'");
  }

  public static class Adapter extends TypeAdapter<IngestionState> {
    @Override
    public void write(final JsonWriter jsonWriter, final IngestionState enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public IngestionState read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return IngestionState.fromValue(String.valueOf(value));
    }
  }
}

