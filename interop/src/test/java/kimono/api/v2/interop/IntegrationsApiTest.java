/*
 * Interop API
 * Interop APIs provide access to Kimono Interop Cloud resources and operations
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package kimono.api.v2.interop;

import kimono.api.v2.interop.ApiException;
import kimono.api.v2.interop.model.Error;
import kimono.api.v2.interop.model.Integration;
import kimono.api.v2.interop.model.IntegrationVersion;
import kimono.api.v2.interop.model.IntegrationVersionsResponse;
import kimono.api.v2.interop.model.IntegrationsResponse;
import org.junit.Test;
import org.junit.Ignore;


/**
 * API tests for IntegrationsApi
 */
@Ignore
public class IntegrationsApiTest {

    private final IntegrationsApi api = new IntegrationsApi();

    
    /**
     * Create Integration
     *
     * Create an Integration
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createIntegrationTest() throws ApiException {
        Integration integration = null;
        Integration response = api.createIntegration(integration);

        // TODO: test validations
    }
    
    /**
     * Create Integration Version
     *
     * Create a new version of an Integration
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createIntegrationVersionTest() throws ApiException {
        java.util.UUID id = null;
        String body = null;
        IntegrationVersion response = api.createIntegrationVersion(id, body);

        // TODO: test validations
    }
    
    /**
     * Delete an Integration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIntegrationTest() throws ApiException {
        java.util.UUID id = null;
        api.deleteIntegration(id);

        // TODO: test validations
    }
    
    /**
     * Delete Integration Version
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIntegrationVersionTest() throws ApiException {
        java.util.UUID id = null;
        String version = null;
        api.deleteIntegrationVersion(id, version);

        // TODO: test validations
    }
    
    /**
     * Find an Integration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findIntegrationTest() throws ApiException {
        java.util.UUID id = null;
        Integration response = api.findIntegration(id);

        // TODO: test validations
    }
    
    /**
     * List Integration Versions
     *
     * List the versions of an Integration. Each version is described by an Integration Blueprint.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listIntegrationVersionsTest() throws ApiException {
        java.util.UUID id = null;
        IntegrationVersionsResponse response = api.listIntegrationVersions(id);

        // TODO: test validations
    }
    
    /**
     * List Integrations
     *
     * List all Integrations
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listIntegrationsTest() throws ApiException {
        String name = null;
        IntegrationsResponse response = api.listIntegrations(name);

        // TODO: test validations
    }
    
    /**
     * Update Integration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateIntegrationTest() throws ApiException {
        java.util.UUID id = null;
        Integration response = api.updateIntegration(id);

        // TODO: test validations
    }
    
    /**
     * Update Integration Version
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateIntegrationVersionTest() throws ApiException {
        java.util.UUID id = null;
        String version = null;
        IntegrationVersion response = api.updateIntegrationVersion(id, version);

        // TODO: test validations
    }
    
}
